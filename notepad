
# github
git clone https://github.com/sgrote/GOfuncR.git
# local
cd /r1/people/steffi_grote/R_packages/GOfuncR_package


# package version number is set in 
GOfuncR/DESCRIPTION

# help page
GOfuncR/vignettes/GOfuncR.Rmd

# needs BiocStyle installed
# in R:
source("https://bioconductor.org/biocLite.R")
biocLite("BiocStyle")

# help files for single function like ?go_enrich should be in GOfuncR/man

# vignette with package usage examples in GOfuncR/vignettes
not there yet

# build package
cd /home/steffi_grote/R_packages/GOfuncR_package 
R CMD build GOfuncR #--resave-data

# install package
R CMD INSTALL GOfuncR_1.2.8.tar.gz

# check package
R CMD check GOfuncR_1.2.8.tar.gz
R CMD BiocCheck GOfuncR_1.2.8.tar.gz
# Valgrind for memory leaks (So aehnlich steht das auch in Bioconductor/Developers/Debugging_C++)
R -d "valgrind -v --tool=memcheck --leak-check=full --track-origins=yes --read-var-info=yes" --no-save < tests/test_valgrind.R


# if check says e.g. 'get_ids.Rd: non-ASCII input and no declared encoding', to find non-ASCII:
tools::showNonASCII(readLines("GOfuncR/man/get_ids.Rd"))


# look at help page and news
# in R:
options("help_type"="html") # to check links
?go_enrich
?get_anno_genes
#vignette("GOfuncR",package="GOfuncR")  ## not there yet
news(package="GOfuncR")

# if new .cpp files are added, Rcpp's compileAttributes must be run once:
# in R:
require("Rcpp")
setwd("/home/steffi_grote/R_packages/GOfuncR_package/GOfuncR")
compileAttributes()

# check that values of some sample anaylses still match "tests/saved_results.RData" (or set them)
# (caution: might differ slightly between computers)
cd /home/steffi_grote/R_packages/GOfuncR_package # needs to be executed there
Rscript test_values.R
#Rscript test_values.R set_values  		# to set the saved results ("tests/saved_results.RData")




# TODO
# version 1.2.6
(*) ref-genome default in get_anno_genes
(*) only go-ids as input for get_anno_genes (remove res default option)
(*) change col-name in get_names to "go_name"
(*) GO-domains as optional input parameter for go_enrich

(*) add GO-names to get_parent, get_child, [get_anno_genes - eher nicht, vllt. ein beispiel mit get_names in man-page, es reicht schon wenn sich die ID immer wiederholt]
(*) get_parent, get_child -> reduce to shortest distance, say that in man-page

(*) get_ids
(*) add in man-page get_categories an example that uses get_parent_nodes
(*) sort go_enrich res by -fwer-under [n-candidate expected would always put the root nodes to the tail]
(*) in plot_odds_ratio.Rd say how odds ratio is computed
(*) add value to plot_odds_ratio.Rd (return(invisible))
(*) preserve input node-order in plot_odds_ratio
(*) add plot for wilcoxon (plot_scores: gos -> distribution/density of scores compared to root, violin?)

# binomial test, contingancy tables (1.2.8; GOfuncR 0.89.0)
(*) pull func source from github
(*) add binom randset
(*) add binom category test
(*) change "genes" input in general to data-frame?
(*) contingency
(*) testing script to compare results with original Func
(*) plotting function for binomial, contingency
(*) unify plotting function for all 4 tests (infer test from input?, plot_anno_genes)
(*) rename to GOfuncR
() man-pages
() expected vs. real column in output?

# vignette
() vignette [also show example get_anno_genes for input candidate and background genes. Clearly say that root_node==domain. Include table with versions of GO-tree and annotations]
() add to vignette when which test is useful with example (like in func paper); also table
() add 2x2 contingency table figure to vignette
() make a second vignette for statistics and description of tests
() show R-command to compute the p-value of a GO (could be copied to or referenced by ABAEnrichment)
() add acknowledgments? Micha,David,Ben,Janet

# publish
() submit to bioconductor by Oct 6th
() add to https://bioinf.eva.mpg.de/

# tests
() add testthat scripts




# refinement from Func
() refinement from Func (either use c++ or reimplement in R)

# ontology  stuff
() print (on load?), return or attribute(!) version of ontology, annotations, (gene-coords for gene_len and regions)
() print ontology, annotations versions in get_anno_genes (or as attribute?)
() allow user-defined term-tables (GO-graph) (-> roots named explicitly or infer from term[,3]?)
() allow user-defined GO-annotations
() allow user-defined gene_coordinates (?)
() check common methods/classesBioc-devel Digest, Vol 161, Issue 11)
() update-functions for the previous 3? (biomaRt, ensembldb packages)

# general improvements
() empirical p-value? (any other category that has clustered genes might screw it)
() auto-detect test
() use digest md5sum instead of saved_results? maybe also store heads or something (andererseits nur 3Mb)
() data.table fuer get_anno_genes in 'find child nodes' and 'find genes annotated' dauert sehr lange wenn alle GO-IDs als input (vielleicht aus aba_enrich uebernehmen)
() also return total number of annotated genes?
() maybe use one generic plotting function instead of plot_odds / plot_scores...
() wilcoxon for genomic regions? - try out if easy to implement
() FDR?
() overall-significance?
() cutoff for minimum number of genes in a node?
() e.g. in get_anno_genes return NULL (as now) or rather an empty dataframe identical to normal output?
() visualization (email janet - plotting GO-categories)












