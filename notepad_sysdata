
cd /r1/people/steffi_grote/R_packages/GOfuncR_package

# termtables downloaded from (last modified: 25-Apr-2017)
http://archive.geneontology.org/latest-termdb/
go_daily-termdb-tables.tar.gz
# keep term.txt, term2term.txt, graph_path.txt

# go gene association file "mart_export.csv" downloaded from
http://grch37.ensembl.org/biomart/martview/
Database: Ensembl Genes
Dataset: Homo sapiens genes (GRCh37.p13)
Filters: none
Attributes: GO Term Accession, Gene name
18770 Genes
delimiter: csv
unique results only: yes

# gene positions file "gene_coords.csv" downloaded from
http://grch37.ensembl.org/biomart/martview/
Database: Ensembl Genes
Dataset: Homo sapiens genes (GRCh37.p13)
Filters: none
Attributes: gene name, Chromosome Name, Gene Start (bp), Gene End (bp)
18732 Genes # (after filtering (chroms, annotations) - see below)
delimiter: csv
unique results only: yes

# NEW hg20 go gene association file "mart_export_hg20.csv" downloaded from
http://ensembl.org/biomart/martview/
Database: Ensembl Genes 88
Dataset: Homo sapiens genes (GRCh38.p10)
Filters: none
Attributes: GO Term Accession, Gene name
19060 Genes
delimiter: csv
unique results only: yes

# NEW gene positions file "gene_coords_hg20.csv" downloaded from
http://ensembl.org/biomart/martview/
Database: Ensembl Genes 88
Dataset: Homo sapiens genes (GRCh38.p10)
Filters: none
Attributes: gene name, Chromosome Name, Gene Start (bp), Gene End (bp)
18976 Genes
delimiter: csv
unique results only: yes

# NEW go gene association file "mart_export_mouse.csv" downloaded from
http://www.ensembl.org/biomart/martview/
Database: Ensembl Genes 87
Dataset: Mouse genes (GRCm38.p5)
Filters: none
Attributes: GO Term Accession, Associated Gene Name
21436 Genes
delimiter: csv
unique results only: yes

# NEW gene positions for mouse "gene_coords_mouse.csv" downloaded from 
http://www.ensembl.org/biomart/martview/
Database: Ensembl Genes 87
Dataset: Mouse genes (GRCm38.p5)
Filters: none
Attributes: Associated Gene Name, Chromosome/scaffold name, Gene Start (bp), Gene End (bp)
21431 Genes
delimiter: csv
unique results only: yes



#####################################################################################


####### add files to package 
# (R-objects saved in /R/sysdata.rda can be used in the package's R functions without any explicit loading)
# in R: 
rm(list=ls())
setwd("/r1/people/steffi_grote/R_packages/GOfuncR_package")


##### ontology
term = read.table("term_tables/term.txt", sep="\t", quote="", comment.char="", as.is=TRUE)
term2term = read.table("term_tables/term2term.txt", sep="\t", quote="", comment.char="", as.is=TRUE)
graph_path = read.table("term_tables/graph_path.txt", sep="\t", quote="", comment.char="", as.is=TRUE)



##### GO-annotations
## hg19
go_anno_grch37 = read.csv("mart_export.csv", as.is=TRUE)
# remove empty fields here to save space, but keep removing in go_enrich for custom user annotation
go_anno_grch37 = go_anno_grch37[go_anno_grch37[,1] != "",]
length(unique(go_anno_grch37[,2]))

## hg20
go_anno_grch38 = read.csv("mart_export_hg20.csv", as.is=TRUE)
# remove empty fields here to save space, but keep removing in go_enrich for custom user annotation
go_anno_grch38 = go_anno_grch38[go_anno_grch38[,1] != "",]
length(unique(go_anno_grch38[,2]))

## mouse
go_anno_grcm38 = read.csv("mart_export_mouse.csv", as.is=TRUE)
go_anno_grcm38 = go_anno_grcm38[go_anno_grcm38[,1] != "",]
length(unique(go_anno_grcm38[,2]))


##### gene-coordinates
## hg19
gene_coords_grch37 = read.csv("gene_coords.csv", header=T, as.is=T)
# convert to bed-like-file (although ensembl 1-based), remove empty fields and reduce to chr1-22,X,Y
gene_coords_grch37 = gene_coords_grch37[,c(2,3,4,1)]
gene_coords_grch37 = gene_coords_grch37[gene_coords_grch37[,4] != "",]
gene_coords_grch37 = gene_coords_grch37[gene_coords_grch37[,1] %in% c(1:22,"X","Y"),]
# to allow usage of get_genes_from_regions.R from ABAEnrichment without modification
# (take gene-names as hgnc-symbol internally although this is not always identical -- but renaming everything to gene-symbol, also in ABAEnrichment would be painful)
colnames(gene_coords_grch37) = c("chr","start","end","hgnc_symbol")
gene_coords_grch37 = gene_coords_grch37[order(gene_coords_grch37$chr,gene_coords_grch37$start,gene_coords_grch37$end),]
# NEW subset to genes with GO-annotations
gene_coords_grch37 = gene_coords_grch37[gene_coords_grch37$hgnc_symbol %in% go_anno_grch37[,2],]
nrow(gene_coords_grch37)
# TODO: what to shall we do with duplicates? leave for now:
# a) in get_genes_from regions it should not matter - most dupli-regions are overlapping
# b) gene_len=T and blocks: gene_position = gene_coords[match(gene, gene_coords[,4]),1:3] -> only first match
table(table(gene_coords_grch37$hgnc_symbol)) 

## hg20
gene_coords_grch38 = read.csv("gene_coords_hg20.csv", header=T, as.is=T)
# convert to bed-like-file (although ensembl 1-based), remove empty fields and reduce to chr1-22,X,Y
gene_coords_grch38 = gene_coords_grch38[,c(2,3,4,1)]
gene_coords_grch38 = gene_coords_grch38[gene_coords_grch38[,4] != "",]
gene_coords_grch38 = gene_coords_grch38[gene_coords_grch38[,1] %in% c(1:22,"X","Y"),]
# to allow usage of get_genes_from_regions.R from ABAEnrichment without modification
# (take gene-names as hgnc-symbol internally although this is not always identical -- but renaming everything to gene-symbol, also in ABAEnrichment woudl be painful)
colnames(gene_coords_grch38) = c("chr","start","end","hgnc_symbol")
gene_coords_grch38 = gene_coords_grch38[order(gene_coords_grch38$chr,gene_coords_grch38$start,gene_coords_grch38$end),]
# NEW subset to genes with GO-annotations
gene_coords_grch38 = gene_coords_grch38[gene_coords_grch38$hgnc_symbol %in% go_anno_grch38[,2],]
nrow(gene_coords_grch38)


## mouse
gene_coords_grcm38 = read.csv("gene_coords_mouse.csv", header=T, as.is=T)
gene_coords_grcm38 = gene_coords_grcm38[,c(2,3,4,1)]
gene_coords_grcm38 = gene_coords_grcm38[gene_coords_grcm38[,4] != "",]
gene_coords_grcm38 = gene_coords_grcm38[gene_coords_grcm38[,1] %in% c(1:22,"X","Y"),]
colnames(gene_coords_grcm38) = c("chr","start","end","hgnc_symbol")
gene_coords_grcm38 = gene_coords_grcm38[order(gene_coords_grcm38$chr,gene_coords_grcm38$start,gene_coords_grcm38$end),]
# NEW subset to genes with GO-annotations
gene_coords_grcm38 = gene_coords_grcm38[gene_coords_grcm38$hgnc_symbol %in% go_anno_grcm38[,2],]
nrow(gene_coords_grcm38)

save(list=ls(),file="./GOfuncR/R/sysdata.rda")


